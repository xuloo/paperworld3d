<?xml version="1.0" encoding="UTF-8"?>
<project name="build-paperworld-server" default="all" basedir="."
    xmlns:ivy="antlib:org.apache.ivy.ant">

    <description>
      PaperWorld3D build and deployment.
    </description>
     <!-- set global properties for this build -->
	<property file="../../build/user.properties"/>
	<property file="../../build/build.properties"/>
	<property file="build.properties"/>
	
	<taskdef classpath="${basedir}/../../${build.lib}/ant-contrib-1.0b3.jar" resource="net/sf/antcontrib/antlib.xml"/>
     
     <property environment="env"/>
	 
     
	 
	 
     
     
     <property name="dist.dir" location="${red5.dir}/webapps/HelloPaperWorld/WEB-INF/lib"/>

     <path id="classpath">
       <pathelement location="${red5.dir}/red5.jar"/>
       <pathelement location="lib/jedai.jar"/>
     </path>
	 
	 <target name="all">
		 <antcall target="jar"/>
		 <antcall target="clean"/>
	 </target>

	<target name="compile-core" depends="clean-core, prepare-core" 
	 	description="compile the source">
		 
       <mkdir dir="${build.dir}"/>

       <javac srcdir="${paperworld.src.dir}" destdir="${build.dir}" classpathref="classpath"/>

       <copy todir="${build.dir}">
         <fileset dir="${config.dir}">
          <include name="logback.xml"/>
         </fileset>
       </copy>

     </target>
	
	<target name="prepare-core">
		<mkdir dir="${build.dir}"/>
       </target>
       	
    <target name="clean-core" description="delete the contents of the build directory (the compiled classes), then delete the directory itself">
    	<delete failonerror="no" includeemptydirs="true">
    		<fileset dir="${build.dir}" includes="**/*" />
    	</delete>
    		
    	<delete dir="${build.dir}"/>
    </target>
	
     <target name="dist" description="generate the distribution" >

     	<for list="${examples}" param="example">
     		<sequential>			
     				
		     	<copy todir="../../examples/@{example}/WebContent/WEB-INF/lib">
					<fileset dir="../jar">
						<include name="**/*.jar"/>
					</fileset>
				</copy>
     					
     		</sequential>
     	</for>

     </target>
     	
     <target name="jar">
          	<antcall target="build-core-jar"/>
     </target>

     <target name="build-core-jar" depends="compile-core" description="insert this app into the RED5_HOME service">
          	
		<jar jarfile="${jar.dir}/${core.output.name}.jar" basedir="${build.dir}"/>
	
     </target>

     <target name="clean" description="clean up" >
       <antcall target="clean-core"/>
     </target>
</project>
